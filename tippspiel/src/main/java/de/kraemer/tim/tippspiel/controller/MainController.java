package de.kraemer.tim.tippspiel.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import de.kraemer.tim.tippspiel.Card;
import de.kraemer.tim.tippspiel.Player;
import de.kraemer.tim.tippspiel.repositories.CardRepository;
import de.kraemer.tim.tippspiel.repositories.PlayerRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private CardRepository cardRepository;
	@Autowired
	private PlayerRepository playerRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		Player player = new Player();
		player.setCoins(20);
		Card n = new Card();
		n.setName(name);
		player.getCards().add(n);
		n.setOwner(player);
		playerRepository.save(player);
		return "Saved";
	}
	
	@GetMapping(path="/allC")
	public @ResponseBody Iterable<Card> Cards() {
		// This returns a JSON or XML with the users
		return cardRepository.findAll();
	}
	@GetMapping(path="/allP")
	public @ResponseBody Iterable<Player> Players() {
		// This returns a JSON or XML with the users
		return playerRepository.findAll();
	}
}